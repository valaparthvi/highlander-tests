# This workflow is a reusable one called by other workflows
name: E2E workflow

on:
  workflow_dispatch:
  # Variables to set when calling this reusable workflow
    inputs:
      rancher_version:
        description: Rancher version to deploy
        required: true
        type: string

env:
  SETUP_GO_VERSION: '1.20.4'
  GOLANGCI_LINT_VERSION: v1.52

jobs:
  installation:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        timeout-minutes: 5
        with:
          cache: false
          go-version: ${{ env.SETUP_GO_VERSION }}
  
      - name: Setup Ginkgo Test Framework
        run: go install github.com/onsi/ginkgo/v2/ginkgo

      - name: Install K3s / Helm / Rancher
        id: installation
        env:
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml
          HELM_VERSION: 3.12.0
          K3S_VERSION: v1.25.9+k3s1
          RANCHER_VERSION: ${{ inputs.rancher_version }}

        run: |
          ## Export information to other jobs
          ETH_DEV=$(ip route | awk '/default via / { print $5 }')
          MY_IP=$(ip a s ${ETH_DEV} | egrep -o 'inet [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | cut -d' ' -f2)
          export MY_HOSTNAME=$(hostname)
          echo "MY_IP=${MY_IP}" >> $GITHUB_OUTPUT
          echo "MY_HOSTNAME=${MY_HOSTNAME}" >> $GITHUB_OUTPUT
          make prepare-e2e-ci-rancher

    outputs:
        MY_HOSTNAME: ${{ steps.installation.outputs.MY_HOSTNAME }}
        MY_IP: ${{ steps.installation.outputs.MY_IP }}

  e2e-tests:
    needs:
      - installation
    runs-on: self-hosted
    container:
      env:
        RANCHER_USER: admin
        RANCHER_PASSWORD: rancherpassword
        RANCHER_URL: https://${{ needs.installation.outputs.MY_HOSTNAME }}/dashboard

  delete-cluster:
    if: always()
    needs: [installation, e2e-tests]
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Delete k3s cluster
        if: always()
        run: |
          make clean-all

      - name: Clean all
        if: always()
        uses: colpal/actions-clean@v1