# This workflow is a reusable one called by other workflows
name: E2E workflow

on:
  workflow_dispatch:
  # Variables to set when calling this reusable workflow
    inputs:
      rancher_version:
        description: Rancher version to deploy
        required: true
        type: string
      keep_cluster:
        type: choice
        description: "Keep the cluster afterwards?"
        required: true
        default: 'Delete'
        options:
        - Delete
        - Keep

env:
  SETUP_GO_VERSION: '1.20.4'
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EKS_REGION: ${{ secrets.EKS_REGION }}
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  AKS_CLIENT_ID: ${{ secrets.AKS_CLIENT_ID }}
  AKS_CLIENT_SECRET: ${{ secrets.AKS_CLIENT_SECRET }}
  AKS_SUBSCRIPTION_ID: ${{ secrets.AKS_SUBSCRIPTION_ID }}
  AKS_TENANT_ID: ${{ secrets.AKS_TENANT_ID }}

jobs:
  installation:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v4
        timeout-minutes: 5
        with:
          cache: false
          go-version: ${{ env.SETUP_GO_VERSION }}
  
      - name: Setup Ginkgo Test Framework
        run: go install github.com/onsi/ginkgo/v2/ginkgo

      - name: Install K3s / Helm / Rancher
        id: installation
        env:
          KUBECONFIG: /etc/rancher/k3s/k3s.yaml
          HELM_VERSION: 3.12.0
          K3S_VERSION: v1.26.10+k3s1
          RANCHER_VERSION: ${{ inputs.rancher_version }}

        run: |
          ## Export information to other jobs
          ETH_DEV=$(ip route | awk '/default via / { print $5 }')
          MY_IP=$(ip a s ${ETH_DEV} | egrep -o 'inet [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | cut -d' ' -f2)
          export MY_HOSTNAME=$(hostname)
          echo "MY_IP=${MY_IP}" >> $GITHUB_OUTPUT
          echo "MY_HOSTNAME=${MY_HOSTNAME}" >> $GITHUB_OUTPUT
          make prepare-e2e-ci-rancher

      - name: Install Azure CLI
        uses: pietrobolcato/install-azure-cli-action@main

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ env.AKS_CLIENT_ID }}","clientSecret":"${{ env.AKS_CLIENT_SECRET }}","subscriptionId":"${{ env.AKS_SUBSCRIPTION_ID }}","tenantId":"${{ env.AKS_TENANT_ID }}"}'

      - name: Authenticate to GCP
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ env.GCP_CREDENTIALS }}'
  
      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v1
        
      - name: Install gcloud kubectl version
        run: gcloud components install kubectl

      - name: Install EKSCTL
        run: |
          # Better to always use the latest eksctl binary to avoid API version issue
          EKSCTL_GH=https://github.com/weaveworks/eksctl/releases/latest/download
          curl --location ${EKSCTL_GH}/eksctl_$(uname -s)_amd64.tar.gz | tar xz -C .
          chmod +x eksctl
          sudo mv eksctl /usr/local/bin

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.0
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.EKS_REGION }}

    outputs:
        MY_HOSTNAME: ${{ steps.installation.outputs.MY_HOSTNAME }}
        MY_IP: ${{ steps.installation.outputs.MY_IP }}

  e2e-tests:
    needs:
      - installation
    runs-on: self-hosted
    env:
      RANCHER_USER: admin
      RANCHER_PASSWORD: rancherpassword
      RANCHER_URL: https://${{ needs.installation.outputs.MY_HOSTNAME }}/dashboard
      shell: bash
      run: |
        export CATTLE_TEST_CONFIG=cattle-config-imp.yaml
        make testi
        export CATTLE_TEST_CONFIG=cattle-config-prov.yaml
        make testp

  # delete-cluster:
  #   if: always()
  #   needs: [installation, e2e-tests]
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Delete k3s cluster
  #       if: always()
  #       run: |
  #         make clean-all

  #     - name: Clean all
  #       if: always()
  #       uses: colpal/actions-clean@v1